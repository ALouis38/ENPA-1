claro_resource_index:
    pattern: /
    defaults: { _controller: ClarolineCoreBundle:Resource:index}

claro_resource_creation_form:
    pattern: /form/{resourceType}
    defaults: { _controller: ClarolineCoreBundle:Resource:creationForm }
    options:
        expose: true

claro_resource_create:
    pattern: /add/{resourceType}/{parentInstanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:create }
    options:
        expose: true

claro_resource_custom:
    pattern: /custom/{resourceType}/{action}/{instanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:custom }
    options:
        expose: true

claro_resource_properties_form:
    pattern: /form/properties/{resourceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:basePropertiesForm }
    options:
        expose: true

claro_resource_properties_update:
    pattern: /update/properties/{instanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:updateBaseProperties }
    options:
        expose: true

claro_resource_edit_options:
    pattern: /edit/options/{instanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:editOptions }
    options:
        expose: true

claro_resource_delete:
    pattern: /delete/{instanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:delete }
    options:
        expose: true

claro_resource_edit:
   pattern: /edit/{instanceId}/{workspaceId}/{options}
   defaults: { _controller: ClarolineCoreBundle:Resource:edit}
   options:
        expose: true

claro_resource_root_node:
    pattern: /nodes/{userId}/roots.{format}
    defaults: { _controller: ClarolineCoreBundle:Resource:getRootNode, userId:null }
    options:
        expose: true

claro_resource_node:
    pattern: node/{instanceId}/node.{format}
    defaults: { _controller: ClarolineCoreBundle:Resource:getNode }
    options:
        expose: true

claro_resource_move:
   pattern: move/{idChild}/{idParent}
   defaults: { _controller: ClarolineCoreBundle:Resource:moveResource }
   options:
        expose: true

claro_resource_add_workspace:
    pattern: workspace/add/{instanceId}/{options}/{instanceDestinationId}
    defaults: { _controller: ClarolineCoreBundle:Resource:addToWorkspace }
    options:
        expose: true
        options: ref|copy

claro_resource_remove_workspace:
    pattern: workspace/remove/{instanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:deleteInstance}
    options:
        expose: true



claro_resource_form:
    pattern: /form/{instanceParentId}/{type}/{renderType}
    defaults: { _controller: ClarolineCoreBundle:Resource:getForm }
    options:
        expose: true

claro_resource_type_resource:
    pattern: /type/{listable}/list.{format}
    defaults: { _controller: ClarolineCoreBundle:Resource:getResourceTypes }
    options:
        expose: true

claro_resource_get_instances:
    pattern: /get/copy/{instanceId}
    defaults: { _controller: ClarolineCoreBundle:Resource:getResourcesReference }
    options:
        expose: true

claro_resource_masks:
    pattern: /{type}/masks.{format}
    defaults: { _controller: ClarolineCoreBundle:Resource:getMasks, type:'all' }
    options:
        expose: true

claro_resource_add_permission:
    pattern: /permission/add/{instanceId}/{userId}/{maskId}
    defaults: { _controller: ClarolineCoreBundle:Resource:addInstanceUserPermission }
    options:
        expose: true

claro_resource_remove_permission:
    pattern: /permission/remove/{instanceId}/{userId}/{maskId}
    defaults: { _controller: ClarolineCoreBundle:Resource:removeInstanceUserPermission }
    options:
        expose: true

claro_license_list:
    pattern: /license/list.{format}
    defaults: { _controller: ClarolineCoreBundle:Resource:getJsonLicensesList }
    options:
        expose: true

claro_player_list:
    pattern: /player/list/{id}
    defaults: { _controller: ClarolineCoreBundle:Resource:getJsonPlayerList }
    options:
        expose: true

claro_json_menu:
    pattern: /action/array/{type}
    defaults: { _controller: ClarolineCoreBundle:Resource:getJsonMenu, type:'all' }
    options:
        expose: true
