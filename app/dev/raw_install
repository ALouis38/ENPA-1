<?php

/**
 * This script can be used to make a fresh development installation or update
 * of the platform. Dev and test environments will be initialized.
 */

require_once __DIR__ . '/utils.php';

$start = new DateTime();
$rootDirectory = realpath(__DIR__ . '/../..');

echo "Refreshing configuration and log files\n";

refreshFile("{$rootDirectory}/app/config/local/plugin/bundles");
refreshFile("{$rootDirectory}/app/config/local/plugin/namespaces");
refreshFile("{$rootDirectory}/app/config/local/plugin/routing.yml");
refreshFile("{$rootDirectory}/app/logs/dev.log");
refreshFile("{$rootDirectory}/app/logs/test.log");

$directories = array(
    "{$rootDirectory}/files",
    "{$rootDirectory}/templates",
    "{$rootDirectory}/test/files",
    "{$rootDirectory}/test/templates",
    "{$rootDirectory}/web/HTMLPage",
    "{$rootDirectory}/test/thumbnails",
    "{$rootDirectory}/web/thumbnails"
);

foreach ($directories as $directory) {
    echo "Cleaning {$directory}\n";
    emptyDir($directory);
}

execComposer();
system("php {$rootDirectory}/app/console claroline:requirements", $returnCode);

if ($returnCode === 0) {
    system("php {$rootDirectory}/app/console doctrine:database:drop --force --env=dev");
    system("php {$rootDirectory}/app/console doctrine:database:create --env=dev");
    system("php {$rootDirectory}/app/console cache:clear --no-warmup --env=dev");
    system("php {$rootDirectory}/app/console claroline:install --with-plugins --with-fixtures --env=dev");

    system("php {$rootDirectory}/app/console doctrine:database:drop --force --env=test");
    system("php {$rootDirectory}/app/console doctrine:database:create --env=test");
    system("php {$rootDirectory}/app/console cache:clear --no-warmup --env=test");
    system("php {$rootDirectory}/app/console claroline:install --with-plugins --with-fixtures --env=test");

    system("php {$rootDirectory}/app/console cache:clear");
    system("php {$rootDirectory}/app/console claroline:plugins:fixtures");
    system("php {$rootDirectory}/app/console claroline:fixture:demo");
}

$end = new DateTime();
$diff = $start->diff($end);
$duration = $diff->i > 0 ? $diff->i . 'm ' : '';
$duration .= $diff->s . 's';

echo "Total script duration: {$duration}\n";
